#version 460
#extension GL_EXT_ray_tracing : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba32f) uniform image2D image;
layout(binding = 2, set = 0) uniform UniformBufferObject {
    mat4 camToWorld;
    mat4 viewToCam;
} ubo;

struct RayPayload {
    vec3 weight;
};
layout(location = 0) rayPayloadEXT RayPayload payload;

void main()
{
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 view = vec2(
        pixelCenter.x / gl_LaunchSizeEXT.x * 2.0 - 1.0,
        1.0 - pixelCenter.y / gl_LaunchSizeEXT.y * 2.0
    );
    vec4 localDir = ubo.viewToCam * vec4(view.xy, 0.0, 1.0);
    vec4 worldDir = ubo.camToWorld * vec4(localDir.xyz, 0.0);
    vec4 direction = vec4(normalize(worldDir.xyz), 0);
    vec4 origin = ubo.camToWorld * vec4(0, 0, 0, 1);

    float tmin = 0.0;
    float tmax = 10000.0;

    payload.weight = vec3(0);

    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xff, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(payload.weight, 1.0));
}